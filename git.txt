
多台电脑合作一个项目的时候需要把所有电脑的ssh都注册到github上，否则没有注册的电脑无法推送修改

//初始化git仓库//Git自动为我们创建了唯一一个master分支
git init

//工作区与版本库的概念

//添加修改文件到暂存区,可反复多次使用，添加多个文件
git add filename

//将暂存区中的文件保存提交到git仓库
git commit -m "说明信息"

//查看当前git的状态
git status

//查看文件修改的内容,比较的是commit的和没有add的文件的版本
git diff filename	//git diff HEAD -- filename命令可以查看工作区和版本库里面最新版本的区别

//命令显示从最近到最远的提交日志,加上--pretty=oneline参数可以使显示内容变得精简
git log  //git log --graph --pretty=oneline --abbrev-commit//分支的合并情况

//版本回退 HEAD表示当前版本，也就是最近提交的commit
git reset --hard HEAD^	//HEAD^表示前一个版本，HEAD^^/HEAD~2前两个版本，也可以写HEAD~100前第100个版本
也可以用版本commit id来回退版本

//记录你的每一次命令//可以查看commit id
git reflog

//查看commit的具体修改
git show
git show commitID

//丢弃工作区的修改//git checkout其实是用版本库里的版本替换工作区的版本
git checkout -- filename 把filename文件在 工作区 的修改全部撤销

//删除暂存区的内容
git reset HEAD <file>

//从版本库中删除文件
git rm filename
git commit -m ""

//远程仓库的使用
https://www.liaoxuefeng.com/wiki/896043488029600/896954117292416

//克隆远程仓库
git clone

//分支
//创建,并切换到分支
git checkout -b dev

相当于
git branch dev//创建分支
git checkout dev//切换分支

git branch查看所有分支

//合并分支,将指定的分支合并到当前分支
git merge 分支名	//出现冲突的时候，git会显示出冲突的地方，然后你需要在冲突的地方修改好，然后重新提交
git merge --no-ff -m "说明信息" 分支名	--no-ff参数，表示禁用Fast forward，这样在删掉分支后，可以从分支历史上查看已经删掉的分支历史
//删除指定的分支
git branch -d dev
git branch -D <name>强行删除

//存储当前工作现场
git stash
git stash list命令查看保存的记录
git stash pop name  返回到指定name的记录

//标签
git tag v1.0 //默认为当前分支
git tag v1.0 <commit id>//给指定的版本添加标签



使用Git下载指定分支命令为：git clone -b 分支名仓库地址

使用Git下载v.2.8.1分支代码，使用命令：git clone -b v2.8.1 https://git.oschina.net/oschina/android-app.git


//git本地分支合并远程分支
git remote -v 查看远程仓库
git fetch origin sql:temp从远程的origin仓库的sql分支下载到本地，并新建一个temp分支
git diff temp查看本地分支的不同
git merge temp合并
git branch -d temp删除分支

首次提交
git remote add origin git@github.com:michaelliao/learngit.git，关联远程，同时添加origin仓库
git push -u origin master关联本地分支和远程分支

git pull
Your branch is behind 'origin/master' by 1 commit, and can be fast-forwarded.
  (use "git pull" to update your local branch)



//标签管理
标签依附于具体的最新一次的commit上
git tag -a <tagname> -m ""//添加标签
git tag -d <tagname>//删除标签
git push origin <tagname>//向远程推送标签
git push origin --tags//向远程推送所有未推送的标签




